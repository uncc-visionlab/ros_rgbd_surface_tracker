<?xml version="1.0" encoding="UTF-8"?>
<!-- Tools to change and view node example output. -->
<launch>
    
    <!--<env name="ROS_IP" value="192.168.1.241"/>-->
    
    <env name="ROSCONSOLE_CONFIG_FILE" 
         value="$(find ros_rgbd_surface_tracker)/cfg/rosconsole.conf"/> 
    
    <arg name="live_sensor" default="true" />
    <arg name="ARM_HOST" default="false" />
    <arg name="play_bagfile" default="false" />
       
    <arg name="record_cameras" default="false" />
    <arg name="run_rviz" default="true" />
    <arg name="run_surface_tracker" default="true" />
    
    <arg name="run_profiler" value="false" />

    <arg name="file_A" default="/home/arwillis/freiburg_data/rgbd_dataset_freiburg1_room_validation.bag" />
    <arg name="file_1" default="$(arg file_A)" />  
    <arg name="rviz_config_file" default="ros_rgbd_surface_tracker.rviz" />    
    
    <param name="use_sim_time" value="true" />
    <node pkg="rosbag" type="play" name="player" output="screen" args="-r 0.5 --clock $(arg file_1)"/> 
  
    <node pkg="rviz" type="rviz" name="rviz" output="screen" 
          args="-d $(find ros_rgbd_surface_tracker)/rviz/$(arg rviz_config_file)" if="$(arg run_rviz)"/> 
    
    
    <arg name="profile_attribute" value="" unless="$(arg run_profiler)"/>
    <arg name="profile_attribute" 
         value="valgrind &#x002d;&#x002d;tool=callgrind &#x002d;&#x002d;collect-atstart=no" 
         if="$(arg run_profiler)" />

    <arg name="map_frame" default="optitrack" />
    <arg name="rgb_optical_frame" default="rgb_optical_frame" />
    <arg name="rgbd_frame" default="rgbd_frame" />

    <arg name="sensor_type_sr4000" default="false" />
    <arg name="sensor_type_ds325" default="false" />
    <arg name="sensor_type_astra" default="true" />
    <arg name="sensor_type_xtion" default="false" />
    <arg name="sensor_type_kinect_xbox360" default="false" />
    <arg name="sensor_type_kinect_v2" default="false" />
    <arg name="kinect2_resolution" default="qhd"/>

    <!-- BEGIN Live sensor configuration -->
    <arg name="camera" default="camera" />

    <arg name="depth_registration" default="true" />
    <include file="$(find astra_launch)/launch/astra.launch">
        <arg name="publish_tf" default="false" /> 

        <!-- device_id can have the following formats:
        "#1"  : the first device found
        "2@X" : the Xth device on USB bus 2 -->
        <arg name="device_id" default="#1" />
        <arg name="load_driver" default="true" />
    
        <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
        where ${NAME} is of the form "[rgb|depth]_[serial#]", e.g. "depth_B00367707227042B".
        See camera_info_manager docs for calibration URL details. -->
        <arg name="rgb_camera_info_url"   default="" />
        <arg name="depth_camera_info_url" default="" />

        <!-- Hardware depth registration -->
        <arg name="depth_registration" default="true" />

        <!-- Driver parameters -->
        <arg name="color_depth_synchronization"     default="false" />
        <arg name="auto_exposure"                   default="true" />
        <arg name="auto_white_balance"              default="true" />

        <!-- Arguments for remapping all device namespaces -->
        <arg name="rgb"              default="rgb" />
        <arg name="ir"               default="ir" />
        <arg name="depth"            default="depth" />

        <!-- Disable bond topics by default -->
        <arg name="respawn" default="false" />

        <!-- Worker threads for the nodelet manager -->
        <arg name="num_worker_threads" default="4" />
        <!-- END Primesense XTion / Kinect XBOX 360 Sensor Shared Config -->
    </include>
    <!--<include file="$(find ptcloud_engine)/launch/generic.depth.device.launch.xml"
             if="$(arg live_sensor)">
        <arg name="camera" value="$(arg camera)"/>
        <arg name="data_skip" default="0" />
        <arg name="sensor_type_sr4000" value="$(arg sensor_type_sr4000)" />
        <arg name="sensor_type_ds325" value="$(arg sensor_type_ds325)" />
        <arg name="sensor_type_astra" default="$(arg sensor_type_astra)" />
        <arg name="sensor_type_xtion" value="$(arg sensor_type_xtion)" />
        <arg name="sensor_type_kinect_xbox360" value="$(arg sensor_type_kinect_xbox360)" />
        <arg name="sensor_type_kinect_v2" value="$(arg sensor_type_kinect_v2)" />
        <arg name="kinect2_resolution" value="$(arg kinect2_resolution)"/>
    </include>-->
    <!-- END Live sensor configuration -->
      
    <!-- BEGIN Save data to .bag file configuration -->
    <arg name="savefile" default="/tmp/sr4000-camera.bag" if="$(arg sensor_type_sr4000)"/>
    <arg name="savefile" default="/tmp/ds325-camera.bag" if="$(arg sensor_type_ds325)"/>
    <arg name="savefile" default="/tmp/astra-rgbd-camera.bag" if="$(arg sensor_type_astra)"/>
    <arg name="savefile" default="/tmp/xtion-rgbd-camera.bag" if="$(arg sensor_type_xtion)"/>
    <arg name="savefile" default="/tmp/kinect-rgbd-camera.bag" if="$(arg sensor_type_kinect_xbox360)"/>

    <node pkg="rosbag" type="record" name="rosbag_record_rgbd_cam"
          args="record -o $(arg savefile) /camera/rgb/image_raw /camera/rgb/camera_info /camera/depth_registered/image_raw"
          if="$(arg record_cameras)" />
    <!-- END Save data to .bag file configuration -->
    
    <group ns="$(arg camera)">
        <node name="camera_info_relay" pkg="topic_tools" type="relay" output="screen"
              args="rgb/camera_info ir/camera_info"/>
        <node name="ros_rgbd_surface_tracker" pkg="ros_rgbd_surface_tracker" 
              type="ros_rgbd_surface_tracker" launch-prefix="$(arg profile_attribute)"
              output="screen" if="$(arg run_surface_tracker)">
            <!--
            <remap from="rgb/input_image" to="rgb/image_raw"/>
            <remap from="depth_registered/input_image" to="depth_registered/image_raw"/>
            -->
            <remap from="rgb/input_image" to="rgb/image_color"/>
            <remap from="depth_registered/input_image" to="depth/image"/>
            <param name="use_rgb_stream" value = "false" if="$(arg ARM_HOST)"/>
            <param name="use_rgb_stream" value = "true" unless="$(arg ARM_HOST)"/>
            <param name="map_frame" value = "$(arg map_frame)"/>
            <param name="optical_parent" value = "$(arg map_frame)"/>
            <param name="optical_frame" value = "$(arg rgbd_frame)"/>
        </node>        
    </group>      
                
    <node name="base_to_optical" pkg="tf" 
          type="static_transform_publisher"  
          args="0.0 0.0 0.0 0.0 0.0 0.0 $(arg map_frame) $(arg rgb_optical_frame) 100" />   
          <!-- args="0.0 0.0 0.5  0.5 -0.5 0.5 -0.5 $(arg map_frame) $(arg rgb_optical_frame) 100" />  -->
        
</launch>
