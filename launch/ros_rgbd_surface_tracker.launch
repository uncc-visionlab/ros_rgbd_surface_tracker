<?xml version="1.0" encoding="UTF-8"?>
<!-- Tools to change and view node example output. -->
<launch>
    
    <!--<env name="ROS_IP" value="192.168.1.241"/>-->
    
    <env name="ROSCONSOLE_CONFIG_FILE" 
         value="$(find ros_rgbd_surface_tracker)/cfg/rosconsole.conf"/> 
    
    <arg name="live_sensor" default="true" />
    <arg name="play_bagfile" default="false" />
    
    <arg name="record_cameras" default="false" />
    <arg name="run_rviz" default="true" />
    <arg name="run_surface_tracker" default="true" />
    
    <arg name="run_profiler" value="false" />

    <arg name="profile_attribute" value="" unless="$(arg run_profiler)"/>
    <arg name="profile_attribute" 
         value="valgrind &#x002d;&#x002d;tool=callgrind --instr-atstart=no" 
         if="$(arg run_profiler)" />

    <arg name="map_frame" default="optitrack" />
    <arg name="rgb_optical_frame" default="rgb_optical_frame" />
    <arg name="rgbd_frame" default="rgbd_frame" />

    <arg name="sensor_type_sr4000" default="false" />
    <arg name="sensor_type_ds325" default="false" />
    <arg name="sensor_type_astra" default="true" />
    <arg name="sensor_type_xtion" default="false" />
    <arg name="sensor_type_kinect_xbox360" default="false" />
    <arg name="sensor_type_kinect_v2" default="false" />
    <arg name="kinect2_resolution" default="qhd"/>

    <!-- BEGIN Live sensor configuration -->
    <arg name="camera" default="camera" />
    <include file="$(find astra_launch)/launch/astra.launch"/>
    <!--<include file="$(find ptcloud_engine)/launch/generic.depth.device.launch.xml"
             if="$(arg live_sensor)">
        <arg name="camera" value="$(arg camera)"/>
        <arg name="data_skip" default="0" />
        <arg name="sensor_type_sr4000" value="$(arg sensor_type_sr4000)" />
        <arg name="sensor_type_ds325" value="$(arg sensor_type_ds325)" />
        <arg name="sensor_type_astra" default="$(arg sensor_type_astra)" />
        <arg name="sensor_type_xtion" value="$(arg sensor_type_xtion)" />
        <arg name="sensor_type_kinect_xbox360" value="$(arg sensor_type_kinect_xbox360)" />
        <arg name="sensor_type_kinect_v2" value="$(arg sensor_type_kinect_v2)" />
        <arg name="kinect2_resolution" value="$(arg kinect2_resolution)"/>
    </include>--> 
    <!-- END Live sensor configuration -->
      
    <!-- BEGIN Save data to .bag file configuration -->
    <arg name="savefile" default="/tmp/sr4000-camera.bag" if="$(arg sensor_type_sr4000)"/>
    <arg name="savefile" default="/tmp/ds325-camera.bag" if="$(arg sensor_type_ds325)"/>
    <arg name="savefile" default="/tmp/astra-rgbd-camera.bag" if="$(arg sensor_type_astra)"/>
    <arg name="savefile" default="/tmp/xtion-rgbd-camera.bag" if="$(arg sensor_type_xtion)"/>
    <arg name="savefile" default="/tmp/kinect-rgbd-camera.bag" if="$(arg sensor_type_kinect_xbox360)"/>

    <node pkg="rosbag" type="record" name="rosbag_record_rgbd_cam"
          args="record -o $(arg savefile) /camera/rgb/input_image /camera/rgb/camera_info /camera/depth_registered/input_image"
          if="$(arg record_cameras)" />
    <!-- END Save data to .bag file configuration -->
    
    <param name="use_sim_time" value = "true" if="$(arg play_bagfile)"/>
    
    <!-- BEGIN Play from .bag file sensor configuration -->
    <arg name="path" default="$(find ros_rgbd_surface_tracker)" />
    <arg name="file_1" default="kinect-rgbd-camera_2015-09-30-08-30-05.bag" />
    <arg name="file_2" default="xtion-rgbd-camera_2016-02-17-18-16-12.bag" />
    <arg name="file_3" default="astra-rgbd-camera.bag"/>
    <arg name="bag_delay" default="5" />
    <node pkg="rosbag" type="play" name="player" output="screen" 
          args="--delay=$(arg bag_delay) -r 1 --clock $(arg path)/../../../../../bagfiles/$(arg file_3) "
          if="$(arg play_bagfile)"/>
    <!-- END Play from .bag file sensor configuration -->

    <group ns="$(arg camera)">
        <node name="camera_info_relay" pkg="topic_tools" type="relay" output="screen"
              args="rgb/camera_info ir/camera_info"/>
        <node name="ros_rgbd_surface_tracker" pkg="ros_rgbd_surface_tracker" 
              type="ros_rgbd_surface_tracker" launch-prefix="$(arg profile_attribute)"
              output="screen" if="$(arg run_surface_tracker)">    
            <remap from="rgb/input_image" to="rgb/image_raw"/>
            <remap from="depth_registered/input_image" to="depth_registered/image_raw"/>
            <param name="map_frame" value = "$(arg map_frame)"/>
            <param name="optical_parent" value = "$(arg rgb_optical_frame)"/>
            <param name="optical_frame" value = "$(arg rgbd_frame)"/>
        </node>        
    </group>      
                
    <node name="base_to_optical" pkg="tf" 
          type="static_transform_publisher"  
          args="0.0 0.0 0.5  0.5 -0.5 0.5 -0.5 $(arg map_frame) $(arg rgb_optical_frame) 100" />   
        
    <arg name="rviz_config_file" default="ros_rgbd_surface_tracker.rviz" />    
    <node pkg="rviz" type="rviz" name="rviz" output="screen" 
          args="-d $(find ros_rgbd_surface_tracker)/rviz/$(arg rviz_config_file)" if="$(arg run_rviz)"/>
</launch>
